@model CvBuilder.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<style>
    .registerForm ul li {
        color: #fd5d93;
    } 
</style>
<body class="register-page">

    <!-- End Navbar -->
    <div class="wrapper wrapper-full-page ">
        <div class="full-page register-page">
            <div class="content" style=" padding-top: 40px; padding-bottom: 30px;  ">
                <div class="container">
                    <div class="row">
                        <div class="col-md-5 ml-auto">
                            <div class="info-area info-horizontal mt-5">
                                <div class="icon icon-warning">
                                    <i class="tim-icons icon-wifi"></i>
                                </div>
                                <div class="description">
                                    <h3 class="info-title">Marketing</h3>
                                    <p class="description">
                                        We've created the marketing campaign of the website. It was a very interesting collaboration.
                                    </p>
                                </div>
                            </div>
                            <div class="info-area info-horizontal">
                                <div class="icon icon-primary">
                                    <i class="tim-icons icon-triangle-right-17"></i>
                                </div>
                                <div class="description">
                                    <h3 class="info-title">Fully Coded in HTML5</h3>
                                    <p class="description">
                                        We've developed the website with HTML5 and CSS3. The client has access to the code using GitHub.
                                    </p>
                                </div>
                            </div>
                            <div class="info-area info-horizontal">
                                <div class="icon icon-info">
                                    <i class="tim-icons icon-trophy"></i>
                                </div>
                                <div class="description">
                                    <h3 class="info-title">Built Audience</h3>
                                    <p class="description">
                                        There is also a Fully Customizable CMS Admin Dashboard for this product.
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7 mr-auto">
                            <div class="card card-register card-white">
                                <div class="card-header">
                                    <img class="card-img" style=" height:50%; width:100%;" src="../../assets/img/card-primary.png" alt="Card image">
                                    <h4 class="card-title ml-2">Register</h4>
                                </div>
                                <div class="card-body">
                                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal form", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()

                                        <h4 class="text-default">Create a new account.</h4>

                                        <hr />
                                        @Html.ValidationSummary("", new { @class = "text-danger registerForm" })
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Password, new { @class = "col-md-4 control-label" })
                                            <div class="col-md-10">
                                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-8 control-label" })
                                            <div class="col-md-10">
                                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="form-group card-footer">
                                            <div class="col-md-offset-2 col-md-12 text-center">

                                                <input type="submit" class="btn btn-primary btn-block btn-lg" value="Register" />
                                            </div>
                                        </div>
                                    }

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

    }
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $().ready(function () {
                $sidebar = $('.sidebar');
                $navbar = $('.navbar');
                $main_panel = $('.main-panel');

                $full_page = $('.full-page');

                $sidebar_responsive = $('body > .navbar-collapse');
                sidebar_mini_active = true;
                white_color = false;

                window_width = $(window).width();

                fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();



                $('.fixed-plugin a').click(function (event) {
                    if ($(this).hasClass('switch-trigger')) {
                        if (event.stopPropagation) {
                            event.stopPropagation();
                        } else if (window.event) {
                            window.event.cancelBubble = true;
                        }
                    }
                });

                $('.fixed-plugin .background-color span').click(function () {
                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('color');

                    if ($sidebar.length != 0) {
                        $sidebar.attr('data', new_color);
                    }

                    if ($main_panel.length != 0) {
                        $main_panel.attr('data', new_color);
                    }

                    if ($full_page.length != 0) {
                        $full_page.attr('filter-color', new_color);
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.attr('data', new_color);
                    }
                });

                $('.switch-sidebar-mini input').on("switchChange.bootstrapSwitch", function () {
                    var $btn = $(this);

                    if (sidebar_mini_active == true) {
                        $('body').removeClass('sidebar-mini');
                        sidebar_mini_active = false;
                        blackDashboard.showSidebarMessage('Sidebar mini deactivated...');
                    } else {
                        $('body').addClass('sidebar-mini');
                        sidebar_mini_active = true;
                        blackDashboard.showSidebarMessage('Sidebar mini activated...');
                    }

                    // we simulate the window Resize so the charts will get updated in realtime.
                    var simulateWindowResize = setInterval(function () {
                        window.dispatchEvent(new Event('resize'));
                    }, 180);

                    // we stop the simulation of Window Resize after the animations are completed
                    setTimeout(function () {
                        clearInterval(simulateWindowResize);
                    }, 1000);
                });

                $('.switch-change-color input').on("switchChange.bootstrapSwitch", function () {
                    var $btn = $(this);

                    if (white_color == true) {

                        $('body').addClass('change-background');
                        setTimeout(function () {
                            $('body').removeClass('change-background');
                            $('body').removeClass('white-content');
                        }, 900);
                        white_color = false;
                    } else {

                        $('body').addClass('change-background');
                        setTimeout(function () {
                            $('body').removeClass('change-background');
                            $('body').addClass('white-content');
                        }, 900);

                        white_color = true;
                    }


                });

                $('.light-badge').click(function () {
                    $('body').addClass('white-content');
                });

                $('.dark-badge').click(function () {
                    $('body').removeClass('white-content');
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {

            $(".slider").slick({
                dots: false,
                infinite: true,
                centerMode: true,
                slidesToShow: 3,
                slidesToScroll: 1,
                responsive: [{
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        infinite: true,
                    }
                },
                {
                    breakpoint: 786,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1,
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
                    // You can unslick at a given breakpoint now by adding:
                    // settings: "unslick"
                    // instead of a settings object
                ]
            });
        });
    </script>
</body>
